{"ast":null,"code":"import _defineProperty from \"/home/waleska/Documents/makeup/Local/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/waleska/Documents/makeup/Local/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/waleska/Documents/makeup/Local/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/waleska/Documents/makeup/Local/client/src/views/Services/Sections/DateAndTime.js\";\nimport React, { useEffect } from \"react\";\nimport Calendar from 'react-calendar';\nimport { Link, withRouter } from 'react-router-dom';\nimport api from '../../../Api/api'; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport 'assets/jss/material-kit-react/views/servicesSection/dateandtime.css';\nimport styles from \"assets/jss/material-kit-react/views/loginPage.js\"; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Hour from \"./horas/hour/Main\";\nimport App from './horas/hour/App';\nvar useStyles = makeStyles(styles);\n\nfunction DateAndTime(props) {\n  var _React$useState = React.useState(\"cardHidden\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      cardAnimaton = _React$useState2[0],\n      setCardAnimation = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"notActive\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      classInput = _React$useState4[0],\n      setClassInput = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"notActive\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      classHour = _React$useState6[0],\n      setClassHour = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"notShow\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      classNext = _React$useState8[0],\n      setClassNext = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      day = _React$useState10[0],\n      setDay = _React$useState10[1];\n\n  var _React$useState11 = React.useState(null),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      error = _React$useState12[0],\n      setError = _React$useState12[1];\n\n  setTimeout(function () {\n    setCardAnimation(\"cardNotHidden\");\n  }, 500);\n  var classes = useStyles();\n  var rawtitulo = props.match.params.titulo;\n  var titulo_array = rawtitulo.split('_');\n  var titulo = '';\n  titulo_array.forEach(function (item) {\n    titulo += \"\".concat(item.charAt(0).toUpperCase() + item.slice(1), \" \");\n  });\n  var currentDate = new Date();\n\n  var _React$useState13 = React.useState({\n    date: props.date,\n    numberpeoplemkup: props.numberpeoplemkup,\n    hours: '',\n    busyHours: [],\n    makeuptype: titulo\n  }),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      reservationData = _React$useState14[0],\n      setReservationData = _React$useState14[1];\n\n  var date = reservationData.date,\n      numberpeoplemkup = reservationData.numberpeoplemkup,\n      hours = reservationData.hours,\n      busyHours = reservationData.busyHours;\n\n  var selectHour = function selectHour(hours, min) {\n    var Hour = currentDate.getHours();\n    var selectedDate = new Date(day).setHours(hours, min);\n    console.log(selectedDate);\n\n    if (currentDate.setHours(Hour + 2 + 1 * numberpeoplemkup) > selectedDate) {\n      setError(\"Please select a valid hour\");\n      setReservationData(_objectSpread({}, reservationData, {\n        hours: \"\"\n      }));\n    } else {\n      setError(null);\n      setClassNext(\"show\");\n      setReservationData(_objectSpread({}, reservationData, {\n        hours: \"\".concat(hours - 1 * numberpeoplemkup, \":\").concat(min, \"-\").concat(hours, \":\").concat(min)\n      }));\n    }\n  };\n\n  var onChange = function onChange(e) {\n    if (e.target.value < 0) {\n      setReservationData(_objectSpread({}, reservationData, _defineProperty({}, e.target.name, 0)));\n    } else {\n      setReservationData(_objectSpread({}, reservationData, _defineProperty({}, e.target.name, e.target.value)));\n      setClassHour('active');\n    }\n\n    console.log(e.target.value);\n  };\n\n  var activeInput = function activeInput(date) {\n    if (numberpeoplemkup !== 0 && classHour !== 'active') {\n      setClassHour('active');\n    } //Thu Apr 02 2020 00:00:00 GMT+0200 (Central European Summer Time)\n\n\n    var currday = currentDate.setHours(0, 0, 0, 0);\n\n    if (currday > date) {\n      setError('Choose a valid date');\n      console.log(error);\n    } else {\n      setError(null);\n      setClassInput('active');\n      setDay(date);\n    }\n\n    var shortDate = String(date).slice(0, 15);\n    console.log(shortDate);\n    api.busyhours(shortDate).then(function (res) {\n      var busyHours = res.data;\n      setReservationData(_objectSpread({}, reservationData, {\n        date: shortDate,\n        busyHours: busyHours\n      }));\n    })[\"catch\"](function (error) {\n      console.log(error);\n      alert(\"Connection error, please choose the day again\");\n    });\n  };\n\n  console.log(busyHours);\n  return React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes[cardAnimaton],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"warning\",\n    className: classes.cardHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Reserve for \", titulo)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), error ? React.createElement(\"div\", {\n    className: \"error-cont\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \" \", error, \" \")) : null, React.createElement(Calendar, {\n    className: \"calendar\",\n    onClickDay: activeInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    onChange: onChange,\n    inputValue: numberpeoplemkup,\n    labelText: \"Number of people to Make up\",\n    id: \"makeupnumber\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"numberpeoplemkup\",\n      type: \"number\",\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(GroupAddIcon, {\n        className: classes.inputIconsColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classHour,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Please select the Hour that you need to be ready. The Minimun time required is 1 hour per person.\"), React.createElement(Hour, {\n    occupied_hour: busyHours,\n    selected_hour: hours,\n    last_hour: 22,\n    init_hour: 6,\n    click: selectHour,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }))), React.createElement(CardFooter, {\n    className: classes.cardFooter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: classNext,\n    to: \"/services/reservationform/\" + rawtitulo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: function onClick() {\n      return props.getData(reservationData, false);\n    },\n    simple: true,\n    size: \"lg\",\n    color: \"warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Reserve\")), React.createElement(Link, {\n    to: \"/services/all\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(Button, {\n    simple: true,\n    size: \"lg\",\n    color: \"warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"Go Back\"))))))));\n}\n\nexport default withRouter(DateAndTime);","map":{"version":3,"sources":["/home/waleska/Documents/makeup/Local/client/src/views/Services/Sections/DateAndTime.js"],"names":["React","useEffect","Calendar","Link","withRouter","api","makeStyles","GroupAddIcon","InputAdornment","styles","GridContainer","GridItem","Button","Card","CardHeader","CustomInput","CardBody","CardFooter","Hour","App","useStyles","DateAndTime","props","useState","cardAnimaton","setCardAnimation","classInput","setClassInput","classHour","setClassHour","classNext","setClassNext","day","setDay","error","setError","setTimeout","classes","rawtitulo","match","params","titulo","titulo_array","split","forEach","item","charAt","toUpperCase","slice","currentDate","Date","date","numberpeoplemkup","hours","busyHours","makeuptype","reservationData","setReservationData","selectHour","min","getHours","selectedDate","setHours","console","log","onChange","e","target","value","name","activeInput","currday","shortDate","String","busyhours","then","res","data","alert","container","cardHeader","fullWidth","type","endAdornment","inputIconsColor","cardFooter","getData"],"mappings":"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","sourcesContent":["import React,{useEffect} from \"react\";\nimport Calendar from 'react-calendar';\nimport {Link,withRouter} from 'react-router-dom';\nimport api from '../../../Api/api';\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport 'assets/jss/material-kit-react/views/servicesSection/dateandtime.css'\nimport styles from \"assets/jss/material-kit-react/views/loginPage.js\";\n\n// core components\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Hour from \"./horas/hour/Main\";\nimport App from './horas/hour/App'\n\n\n\nconst useStyles = makeStyles(styles);\n\n\n\n\nfunction DateAndTime(props) {\n  const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n  const [classInput, setClassInput] = React.useState(\"notActive\");\n  const [classHour, setClassHour] = React.useState(\"notActive\");\n  const [classNext, setClassNext] = React.useState(\"notShow\")\n  const [day, setDay] = React.useState(false)\n  const [error,setError] = React.useState(null)\n  setTimeout(function() {\n    setCardAnimation(\"cardNotHidden\");\n  }, 500);\n  const classes = useStyles();\n  let rawtitulo = props.match.params.titulo\n  let titulo_array = rawtitulo.split('_')\n\n  let titulo = ''\n  titulo_array.forEach(item=>{\n    titulo += `${item.charAt(0).toUpperCase()+item.slice(1) } `\n  })\n\n  let currentDate = new Date();\n\n  const [reservationData, setReservationData] = React.useState({\n    date: props.date,\n    numberpeoplemkup: props.numberpeoplemkup,\n    hours: '',\n    busyHours: [],\n    makeuptype: titulo\n  })\n\n  let {date,numberpeoplemkup,hours,busyHours} = reservationData;\n\n  const selectHour = (hours,min) =>{\n    \n    let Hour = currentDate.getHours();\n    let selectedDate = new Date(day).setHours(hours,min)\n\n    console.log(selectedDate)\n\n    if(currentDate.setHours(Hour+2+(1*numberpeoplemkup)) > selectedDate){\n      setError(\"Please select a valid hour\")\n      setReservationData({\n        ...reservationData, hours:``      \n      })\n    }else{\n      setError(null)\n      setClassNext(\"show\")\n      setReservationData({\n        ...reservationData, hours:`${hours-(1*numberpeoplemkup)}:${min}-${hours}:${min}`      \n      })\n    }\n    \n    \n  }\n\n  const onChange = (e) => {\n    \n      if(e.target.value < 0){\n        setReservationData({\n          ...reservationData, [e.target.name]:0\n        })\n      }else{\n      setReservationData({\n      ...reservationData, [e.target.name]:e.target.value\n    })\n      setClassHour('active')\n    }\n\n    \n    console.log(e.target.value);\n\n  }\n\n  \n  const activeInput = (date) => {\n    if(numberpeoplemkup !== 0 && classHour !== 'active'){\n      setClassHour('active')\n    }\n    \n    //Thu Apr 02 2020 00:00:00 GMT+0200 (Central European Summer Time)\n    let currday = currentDate.setHours(0,0,0,0)\n    if(currday > date){\n      setError('Choose a valid date')\n      console.log(error)\n    }else{\n      setError(null)\n      setClassInput('active')\n\n      setDay(date)\n    }\n\n    let shortDate = String(date).slice(0,15);\n    console.log(shortDate)\n    api.busyhours(shortDate).then(res=>{\n      let busyHours = res.data;\n      setReservationData({...reservationData, date:shortDate, busyHours:busyHours})\n    }).catch(error=>{\n      console.log(error)\n      alert(\"Connection error, please choose the day again\")\n    })\n  }\n  console.log(busyHours)\n  return (\n    \n     <div className={classes.container}>\n          <GridContainer justify=\"center\">\n            <GridItem xs={12} sm={12} md={6}>\n              <Card className={classes[cardAnimaton]}>\n                  <CardHeader color=\"warning\" className={classes.cardHeader}>\n                    <h4>Reserve for {titulo}</h4>\n                  </CardHeader>\n                  <div>\n                  <br/>\n                    {error ? \n                      <div className=\"error-cont\">\n                        <h5> {error} </h5>\n                      </div>\n                      : null\n                    }\n                    <Calendar\n                    className=\"calendar\"\n                    onClickDay={activeInput}\n                    />\n                    <CardBody>\n                    <div className={classInput}>  \n                    <CustomInput\n                      onChange={onChange}\n                      inputValue = {numberpeoplemkup}\n                      labelText=\"Number of people to Make up\"\n                      id=\"makeupnumber\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        name:\"numberpeoplemkup\",\n                        type: \"number\",\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <GroupAddIcon className={classes.inputIconsColor} />\n                          </InputAdornment>\n                        )\n                      }}\n                    />\n                    </div>\n                    <div className={classHour}>\n                    <label>Please select the Hour that you need to be ready. The Minimun time required is 1 hour per person.</label>\n                      <Hour\n                      occupied_hour={busyHours}\n                      selected_hour={hours}\n                      last_hour={22}\n                      init_hour={6}\n                      click = {selectHour}\n                      />\n                    </div>\n                    </CardBody>\n                    <CardFooter className={classes.cardFooter}>\n\n                    <Link className={classNext} to={\"/services/reservationform/\"+rawtitulo}>\n                    <Button onClick={()=>props.getData(reservationData,false)} simple size=\"lg\" color=\"warning\">\n                      Reserve\n                    </Button>\n                    </Link>\n                    <Link to={\"/services/all\"}>\n                    <Button simple size=\"lg\" color=\"warning\">\n                      Go Back\n                    </Button>\n                    </Link>\n                    </CardFooter>\n                </div>\n              </Card>\n            </GridItem>\n          </GridContainer>\n        </div>\n        \n  );\n}\n\n\nexport default withRouter(DateAndTime);"]},"metadata":{},"sourceType":"module"}